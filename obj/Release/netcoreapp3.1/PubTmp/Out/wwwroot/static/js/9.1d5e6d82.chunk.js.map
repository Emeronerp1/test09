{"version":3,"sources":["services/AuthenticationService.js","images/RakResizedLogo.png","images/login.jpeg","pages/Login.js","config/toast.js","views/buttons/submit/Submit.js"],"names":["signIn","data","axios","post","apiBase","signOut","Login","setLoginData","useContext","AuthContext","useState","isLoading","setLoading","history","useHistory","useForm","register","handleSubmit","formState","reset","errors","className","style","background","login","to","src","logo","height","alt","action","onSubmit","formData","AuthenticationService","then","response","status","statusCode","userdata","token","user","config","Session","toast","success","push","error","catch","request","appearance","autoDismiss","message","method","type","username","name","placeholder","required","maxLength","password","loading","text","borderRadius","fontSize","color","Submit","props","disabled"],"mappings":"qQAee,M,sCATbA,OAAS,SAACC,GACN,OAAOC,IAAMC,KAAKC,oDAA6BH,I,KAGnDI,QAAU,WACR,OAAO,I,QCXI,MAA0B,2CCA1B,MAA0B,mC,OCY1B,SAASC,IAEpB,IAAQC,EAAiBC,qBAAWC,KAA5BF,aACR,EAA8BG,oBAAS,GAAvC,mBAAKC,EAAL,KAAgBC,EAAhB,KACMC,EAAUC,cAChB,EAAqDC,cAA7CC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,UAAWC,EAA3C,EAA2CA,MACnCC,EAAWF,EAAXE,OA8CR,OAEE,qBAAKC,UAAU,qBAAf,SACE,qBAAKA,UAAU,sDAAf,SACE,qBAAKA,UAAU,qCAAf,SACE,sBAAKA,UAAU,iCAAf,UACE,qBAAKA,UAAU,sFAAf,SACE,qBAAKA,UAAU,qBAAqBC,MAAO,CAAEC,WAAW,OAAD,OAASC,EAAT,UAGzD,qBAAKH,UAAU,iCAAf,SACE,sBAAKA,UAAU,iFAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,IAAD,CAAMA,UAAU,sBAAsBI,GAAG,IAAzC,SAA8C,qBAAKC,IAAKC,EAAMC,OAAQ,IAAKC,IAAI,SAEjF,uBAAMC,OAAO,GAAGC,SAAUd,GA3DxB,SAAAe,GACdpB,GAAW,GACXqB,EACGjC,OAAOgC,GACPE,MAAK,SAACC,GACH,GAAwB,MAApBA,EAASC,QAA+C,MAA7BD,EAASlC,KAAKoC,WAAoB,CAC/D,IAAMC,EAAW,CACfF,QAAQ,EACRG,MAAOJ,EAASlC,KAAKA,KAAKsC,MAC1BC,KAAML,EAASlC,KAAKA,KAAKwC,OAAOC,SAElCnC,EAAa+B,GACbK,IAAMC,QAAQ,0DAA2DH,KACzE5B,EAAQgC,KAAK,mBAEb1B,IACAP,GAAW,GACX+B,IAAMG,MAAM,oDAAqDL,QAGtEM,OAAM,SAACD,GAEFA,EAAMX,UAMNhB,IACAP,GAAW,IAEJkC,EAAME,QAKbL,IAAMG,MAAM,gIAAiI,CAAEG,WAAY,QAASC,aAAa,IAGjLP,IAAMG,MAAM,QAASA,EAAMK,eAoB0BC,OAAO,OAAxD,UACE,oBAAI/B,UAAU,UAAd,sCACA,qCACA,qBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,sBAAMA,UAAU,mBAAhB,SAAmC,mBAAGA,UAAU,kBAElD,mCACIgC,KAAK,WACLhC,UAAS,uBAAkBD,EAAOkC,SAAW,aAAe,IAC5DC,KAAK,WACLC,YAAY,YACRxC,EAAS,WAAY,CAAEyC,UAAU,EAAMC,UAAW,YAI9D,qBAAKrC,UAAU,aAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,sBAAMA,UAAU,mBAAhB,SAAmC,mBAAGA,UAAU,kBAElD,mCACIgC,KAAK,WACLhC,UAAS,uBAAkBD,EAAOuC,SAAW,aAAe,IAC5DJ,KAAK,WACLC,YAAY,YACRxC,EAAS,WAAY,CAAEyC,UAAU,EAAMC,UAAW,YAI9D,qBAAKrC,UAAU,aAAf,SACE,cAAC,IAAD,CACIuC,QAASjD,EACTkD,KAAK,cAGX,qBAAKxC,UAAU,yBAAf,SACE,mBAAGA,UAAU,cAAb,0F,gCCrHtB,KAYeoB,IATA,CACXnB,MAAO,CACHwC,aAAc,OACdvC,WAAY,OACZwC,SAAU,OACVC,MAAO,U,kFCEAC,MARf,SAAgBC,GACZ,OACI,8BACI,wBAAQ7C,UAAU,6BAA6B8C,SAAUD,EAAMN,QAA/D,SAAyEM,EAAML","file":"static/js/9.1d5e6d82.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst apiBase = process.env.REACT_APP_API_URL;\n\n\nclass AuthenticationService {\n  signIn = (data) => {\n      return axios.post(apiBase + \"/app/AdminLogin\", data);\n  }\n\n  signOut = () => {\n    return false;\n  }\n}\n\nexport default new AuthenticationService();","export default __webpack_public_path__ + \"static/media/RakResizedLogo.4e774f5d.png\";","export default __webpack_public_path__ + \"static/media/login.5be7827d.jpeg\";","import React, { useContext, useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport toast from 'react-hot-toast';\nimport { AuthContext } from \"../helpers/AuthContext\";\nimport config from \"../config/toast\";\nimport AuthenticationService from \"../services/AuthenticationService\";\nimport { Submit } from \"../views/buttons\"\nimport logo from '../images/RakResizedLogo.png'\nimport login from '../images/login.jpeg'\n\n\nexport default function Login() {\n\n    const { setLoginData } = useContext(AuthContext);\n    let [isLoading, setLoading] = useState(false);\n    const history = useHistory();\n    const { register, handleSubmit, formState, reset } = useForm();\n    const { errors } = formState;\n\n    const doLogin = formData => {\n      setLoading(true);\n      AuthenticationService\n        .signIn(formData)\n        .then((response) => {\n            if (response.status === 200 && response.data.statusCode === 200) {\n              const userdata = {\n                status: true,\n                token: response.data.data.token,\n                user: response.data.data.config.Session\n              };\n              setLoginData(userdata);\n              toast.success('You have been successfully logged into the application.', config);\n              history.push('/dashboard');\n            } else {\n              reset();\n              setLoading(false);\n              toast.error('Incorrect username or password. Please try again.', config);\n            }\n        })\n        .catch((error) => {\n          // Error\n          if (error.response) {\n              // The request was made and the server responded with a status code\n              // that falls out of the range of 2xx\n              // console.log(error.response.data);\n              // console.log(error.response.status);\n              // console.log(error.response.headers);\n              reset();\n              setLoading(false);\n              //addToast(\"Incorrect username or password. Please try again.\", { appearance: 'error', autoDismiss: true });\n          } else if (error.request) {\n              // The request was made but no response was received\n              // `error.request` is an instance of XMLHttpRequest in the \n              // browser and an instance of\n              // http.ClientRequest in node.js\n              toast.error(\"Network problems happen when something disrupts the connection between your computer and the content you're trying to access.\", { appearance: 'error', autoDismiss: true });\n          } else {\n              // Something happened in setting up the request that triggered an Error\n              toast.error('Error', error.message);\n          }\n        });\n    };\n\n    return (\n\n      <div className=\"container-scroller\">\n        <div className=\"container-fluid page-body-wrapper full-page-wrapper\">\n          <div className=\"content-wrapper auth p-0 theme-two\">\n            <div className=\"row d-flex align-items-stretch\">\n              <div className=\"col-md-4 banner-section d-none d-md-flex align-items-stretch justify-content-center\">\n                <div className=\"slide-content bg-1\" style={{ background: `url(${login})` }}>\n                </div>\n              </div>\n              <div className=\"col-12 col-md-8 h-100 bg-white\">\n                <div className=\"auto-form-wrapper d-flex align-items-center justify-content-center flex-column\">\n                  <div className=\"nav-get-started\">\n                    <Link className=\"btn get-started-btn\" to=\"/\" ><img src={logo} height={100} alt=\"\" /></Link>\n                  </div>\n                  <form action=\"\" onSubmit={handleSubmit(doLogin)} method=\"post\">\n                    <h3 className=\"mr-auto\">Holiday Homes Inspection</h3>\n                    <p>&nbsp;</p>\n                    <div className=\"form-group\">\n                      <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                          <span className=\"input-group-text\"><i className=\"icon-user\" /></span>\n                        </div>\n                        <input\n                            type=\"username\"\n                            className={`form-control ${errors.username ? 'is-invalid' : ''}`}\n                            name=\"username\"\n                            placeholder=\"Username\"\n                            {...register(\"username\", { required: true, maxLength: 20 })}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"form-group\">\n                      <div className=\"input-group\">\n                        <div className=\"input-group-prepend\">\n                          <span className=\"input-group-text\"><i className=\"icon-lock\" /></span>\n                        </div>\n                        <input\n                            type=\"password\"\n                            className={`form-control ${errors.password ? 'is-invalid' : ''}`}\n                            name=\"password\"\n                            placeholder=\"Password\"\n                            {...register(\"password\", { required: true, maxLength: 20 })}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"form-group\">\n                      <Submit \n                          loading={isLoading}\n                          text='SIGN IN'\n                      />\n                    </div>\n                    <div className=\"wrapper mt-5 text-gray\">\n                      <p className=\"footer-text\">2022 &copy; Ras Al Khaimah Tourism Development Authority.</p>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n}\n","import React from 'react';\n\n\nconst config = {\n    style: {\n        borderRadius: '10px',\n        background: '#333',\n        fontSize: '14px',\n        color: '#fff'\n    }\n};\n\nexport default config;","import React from 'react'\n\nfunction Submit(props) {\n    return (\n        <div>\n            <button className=\"btn btn-primary submit-btn\" disabled={props.loading}>{props.text}</button>\n        </div>\n    )\n}\n\nexport default Submit;\n"],"sourceRoot":""}