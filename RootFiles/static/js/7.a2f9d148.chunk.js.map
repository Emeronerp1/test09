{"version":3,"sources":["pages/ScheduleSiteVisit.js","services/BackendService.js","config/toast.js","views/buttons/submit/Submit.js"],"names":["ScheduleSiteVisit","useState","Date","params","useParams","isLoading","setLoading","date","setDate","time","setTime","unitId","useEffect","className","onSubmit","e","data","moment","format","parseInt","preventDefault","BackendService","then","response","status","statusCode","toast","success","config","error","catch","appearance","autoDismiss","request","message","htmlFor","dateFormat","selected","onChange","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","loading","text","apiBase","process","axios","interceptors","use","user","JSON","parse","localStorage","getItem","token","headers","Authorization","a","post","get","style","borderRadius","background","fontSize","color","Submit","props","disabled"],"mappings":"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","file":"static/js/7.a2f9d148.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport 'react-loading-skeleton/dist/skeleton.css'\nimport \"flatpickr/dist/themes/material_red.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Flatpickr from \"react-flatpickr\";\nimport DatePicker from 'react-datepicker'\nimport { useForm } from \"react-hook-form\";\nimport { useParams, useLocation, useHistory } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport config from \"../config/toast\";\nimport BackendService from \"../services/BackendService\";\nimport { Submit } from \"../views/buttons\"\nimport moment from 'moment';\n\nexport default function ScheduleSiteVisit() {\n  const [startDate, setStartDate] = useState(new Date());\n  const params = useParams()\n  const [isLoading, setLoading] = useState(true);\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [unitId, setUnitId] = useState(params.unitId);\n\n  useEffect(() => {\n    if (date && time && unitId)\n      setLoading(false); \n    if (!(date && time && unitId))\n      setLoading(true); \n  }, [unitId, date, time]);\n\n  const doPost = (e) => {\n    const data = {\n      date: moment(date).format(\"YYYY-MM-DD\"), time: moment(time).format(\"hh:mm:A\"), unitId: parseInt(unitId)\n    }\n    e.preventDefault();\n    BackendService\n      .ScheduleSiteVisit(data)\n      .then((response) => {\n          if (response.status === 200 && response.data.statusCode === 200) {\n\n            toast.success('You have been successfully scheduled inspection visit.', config);\n          } else {\n            setLoading(false);\n            toast.error('Incorrect username or password. Please try again.', config);\n          }\n      })\n      .catch((error) => {\n        // Error\n        if (error.response) {\n            // The request was made and the server responded with a status code\n            // that falls out of the range of 2xx\n            // console.log(error.response.data);\n            // console.log(error.response.status);\n            // console.log(error.response.headers);\n            setLoading(false);\n            toast.error(\"There is a problem while calling the api request.\", { appearance: 'error', autoDismiss: true });\n            //addToast(\"Incorrect username or password. Please try again.\", { appearance: 'error', autoDismiss: true });\n        } else if (error.request) {\n            // The request was made but no response was received\n            // `error.request` is an instance of XMLHttpRequest in the \n            // browser and an instance of\n            // http.ClientRequest in node.js\n            toast.error(\"Network problems happen when something disrupts the connection between your computer and the content you're trying to access.\", { appearance: 'error', autoDismiss: true });\n        } else {\n            // Something happened in setting up the request that triggered an Error\n            toast.error('Error', error.message);\n        }\n      });\n    e.preventDefault();\n  };\n\n    return (\n        <div className=\"container-fluid page-body-wrapper\">\n        <div className=\"main-panel\">\n          <div className=\"content-wrapper\">\n            <div className=\"row\">\n\n            <div className=\"col-md-6 grid-margin stretch-card\">\n        <div className=\"card\">\n          <div className=\"card-body\">\n            <h4 className=\"card-title\">INSPECTION PROCESS</h4>\n            <p className=\"card-description\">\n              Unit ID: #{ params.unitId }\n            </p>\n            <form className=\"forms-sample mb-10\" onSubmit={doPost}>\n              <div className=\"form-group\">\n                <label htmlFor=\"exampleInputUsername1\">Scheduled Date</label>\n                <DatePicker dateFormat=\"yyyy-MM-dd\"  className=\"form-control bg-white\" selected={date} onChange={(date) => setDate(date)} />\n              </div>\n              <div className=\"form-group\">\n              \n                <label htmlFor=\"exampleInputEmail1\">Scheduled Time</label>\n                <DatePicker \n                      className=\"form-control form-select bg-white\"\n                      selected={time}\n                      onChange={(date) => setTime(date)}\n                      showTimeSelect\n                      showTimeSelectOnly\n                      timeIntervals={15}\n                      timeCaption=\"Time\"\n                      dateFormat=\"h:mm aa\"\n                />\n              </div>\n              <Submit \n                          loading={isLoading}\n                          text='SUBMIT'\n                      />\n            </form>\n          </div>\n        </div>\n      </div>\n            </div>\n            \n          </div>\n        </div>\n        </div>\n    )\n}\n","import axios from 'axios';\n\nconst apiBase = process.env.REACT_APP_API_URL;\n\n// Add a request interceptor\naxios.interceptors.request.use( config => {\n  const user = JSON.parse(localStorage.getItem('userData')) || {};\n\n  if(user && user.token){\n    const token = 'Bearer ' + user.token;\n    config.headers.Authorization =  token;\n  }\n  return config;\n});\n\nclass BackendService {\n  async getDashBoard() {\n    return await axios.post(apiBase + \"/app/LoadAssignedList\");\n  }\n\n  async getScheduledList() {\n    return await axios.post(apiBase + \"/app/ScheduledList\");\n  }\n  async getLoadForInspection(data) {\n    return await axios.post(apiBase + \"/app/LoadForInspection\", data);\n  }\n  async InsertCheckListResults(data) {\n    return await axios.post(apiBase + \"/app/InsertCheckListResults\", data);\n  }\n\n  async getInspectedList() {\n    return await axios.post(apiBase + \"/app/VisitedHistory\");\n  }\n\n  async getReScheduledList() {\n    return await axios.post(apiBase + \"/app/ReScheduledList\");\n  }\n\n  async ScheduleSiteVisit(data) {\n    return await axios.post(apiBase + \"/app/ScheduleSiteVisit\", data);\n  }\n\n  async getPmBoard() {\n    return await axios.get(\"/api/test/pm\");\n  }\n\n  async getAdminBoard() {\n    return await axios.get(\"/api/test/admin\");\n  }\n}\n\nexport default new BackendService();","import React from 'react';\n\n\nconst config = {\n    style: {\n        borderRadius: '10px',\n        background: '#333',\n        fontSize: '14px',\n        color: '#fff'\n    }\n};\n\nexport default config;","import React from 'react'\n\nfunction Submit(props) {\n    return (\n        <div>\n            <button className=\"btn btn-primary submit-btn\" disabled={props.loading}>{props.text}</button>\n        </div>\n    )\n}\n\nexport default Submit;\n"],"sourceRoot":""}